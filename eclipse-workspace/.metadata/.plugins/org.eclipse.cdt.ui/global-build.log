01:06:47 **** Build of configuration Intel(R) SGX Simulation Debug for project SGX_SQLite ****
make SGX_DEBUG=1 SGX_MODE=SIM -f sgx/Makefile 
make -C ./sgx/enclave_sqlite  -f sgx_t_u.mk all;
make[1]: Verzeichnis „/home/sgx/M-AI-CryptographicProtocols/eclipse-workspace/SGX_SQLite/sgx/enclave_sqlite“ wird betreten
rm -f .config_* app enclave.so enclave.signed.so App/App.o App/ocalls.o App/Enclave_u.* Enclave/Enclave.o Enclave/SgxVfsHandler.o Enclave/sqlite3.o Enclave/ocall_interface.o Enclave/Enclave_t.*
cd App && /opt/intel/sgxsdk/bin/x64/sgx_edger8r --untrusted ../Enclave/Enclave.edl --search-path ../Enclave --search-path /opt/intel/sgxsdk/include
GEN  =>  App/Enclave_u.c
cc -m64 -O0 -g  -fPIC -Wno-attributes -IApp -I/opt/intel/sgxsdk/include -DDEBUG -UNDEBUG -UEDEBUG -DSGX_UNTRUSTED -c App/Enclave_u.c -o App/Enclave_u.o
CC   <=  App/Enclave_u.c
cc -m64 -O0 -g  -fPIC -Wno-attributes -IApp -I/opt/intel/sgxsdk/include -DDEBUG -UNDEBUG -UEDEBUG -c App/ocalls.c -o App/ocalls.o
CC   <=  App/ocalls.c
g++ -m64 -O0 -g  -fPIC -Wno-attributes -IApp -I/opt/intel/sgxsdk/include -DDEBUG -UNDEBUG -UEDEBUG -std=c++11 -c App/App.cpp -o App/App.o
In file included from App/../App/Enclave_u.h:11:0,
                 from App/App.cpp:5:
/opt/intel/sgxsdk/include/sgx_tprotected_fs.h:57:0: warning: "FILENAME_MAX" redefined
 #define FILENAME_MAX  260
 
In file included from /usr/include/stdio.h:131:0,
                 from /usr/include/c++/7/cstdio:42,
                 from /usr/include/c++/7/ext/string_conversions.h:43,
                 from /usr/include/c++/7/bits/basic_string.h:6361,
                 from /usr/include/c++/7/string:52,
                 from /usr/include/c++/7/bits/locale_classes.h:40,
                 from /usr/include/c++/7/bits/ios_base.h:41,
                 from /usr/include/c++/7/ios:42,
                 from /usr/include/c++/7/ostream:38,
                 from /usr/include/c++/7/iostream:39,
                 from App/App.cpp:1:
/usr/include/x86_64-linux-gnu/bits/stdio_lim.h:27:0: note: this is the location of the previous definition
 #define FILENAME_MAX 4096
 
In file included from App/../App/Enclave_u.h:11:0,
                 from App/App.cpp:5:
/opt/intel/sgxsdk/include/sgx_tprotected_fs.h:58:0: warning: "FOPEN_MAX" redefined
 #define FOPEN_MAX     20
 
In file included from /usr/include/stdio.h:131:0,
                 from /usr/include/c++/7/cstdio:42,
                 from /usr/include/c++/7/ext/string_conversions.h:43,
                 from /usr/include/c++/7/bits/basic_string.h:6361,
                 from /usr/include/c++/7/string:52,
                 from /usr/include/c++/7/bits/locale_classes.h:40,
                 from /usr/include/c++/7/bits/ios_base.h:41,
                 from /usr/include/c++/7/ios:42,
                 from /usr/include/c++/7/ostream:38,
                 from /usr/include/c++/7/iostream:39,
                 from App/App.cpp:1:
/usr/include/x86_64-linux-gnu/bits/stdio_lim.h:37:0: note: this is the location of the previous definition
 #define FOPEN_MAX 16
 
App/App.cpp: In function ‘int main(int, char**)’:
App/App.cpp:64:44: warning: format ‘%d’ expects argument of type ‘int’, but argument 2 has type ‘size_t {aka long unsigned int}’ [-Wformat=]
  printf("Size of Write=  %d\n", sizeOfWrite);
                                            ^
App/App.cpp:72:13: warning: format not a string literal and no format arguments [-Wformat-security]
  printf(data);
             ^
CXX  <=  App/App.cpp
g++ App/Enclave_u.o App/ocalls.o App/App.o -o app -m64 -O0 -g  -L/opt/intel/sgxsdk/lib64 -lsgx_urts_sim -lpthread -lsgx_uprotected_fs -lsgx_uae_service_sim
LINK =>  app
cd Enclave && /opt/intel/sgxsdk/bin/x64/sgx_edger8r --trusted ../Enclave/Enclave.edl --search-path ../Enclave --search-path /opt/intel/sgxsdk/include
GEN  =>  Enclave/Enclave_t.c
cc -m64 -O0 -g  -nostdinc -fvisibility=hidden -fpie -ffunction-sections -fdata-sections -fstack-protector-strong -IEnclave -I/opt/intel/sgxsdk/include -I/opt/intel/sgxsdk/include/tlibc -I/opt/intel/sgxsdk/include/libcxx -c Enclave/Enclave_t.c -o Enclave/Enclave_t.o
CC   <=  Enclave/Enclave_t.c
g++ -m64 -O0 -g  -nostdinc -fvisibility=hidden -fpie -ffunction-sections -fdata-sections -fstack-protector-strong -IEnclave -I/opt/intel/sgxsdk/include -I/opt/intel/sgxsdk/include/tlibc -I/opt/intel/sgxsdk/include/libcxx -std=c++11 -nostdinc++ -c Enclave/Enclave.cpp -o Enclave/Enclave.o
CXX  <=  Enclave/Enclave.cpp
g++ -m64 -O0 -g  -nostdinc -fvisibility=hidden -fpie -ffunction-sections -fdata-sections -fstack-protector-strong -IEnclave -I/opt/intel/sgxsdk/include -I/opt/intel/sgxsdk/include/tlibc -I/opt/intel/sgxsdk/include/libcxx -std=c++11 -nostdinc++ -c Enclave/SgxVfsHandler.cpp -o Enclave/SgxVfsHandler.o
In file included from /opt/intel/sgxsdk/include/sgx_thread.h:36:0,
                 from /opt/intel/sgxsdk/include/libcxx/support/sgx/sgx_mutex:180,
                 from /opt/intel/sgxsdk/include/libcxx/mutex:190,
                 from Enclave/SgxVfsHandler.cpp:8:
Enclave/SgxVfsHandler.cpp: In function ‘std::__1::string getSgxVfsName()’:
Enclave/SgxVfsHandler.cpp:39:28: warning: offsetof within non-standard-layout type ‘getSgxVfsName()::File’ is undefined [-Winvalid-offsetof]
     static_assert(offsetof(File, pMethods) == 0, "Wrong data alignment in custom SQLite3 VFS, lots of weird errors will happen during runtime");
/opt/intel/sgxsdk/include/tlibc/stddef.h:67:54: note: in definition of macro ‘offsetof’
 #define offsetof(type, member)   __builtin_offsetof (type, member)
                                                      ^~~~
CXX  <=  Enclave/SgxVfsHandler.cpp
cc -I/opt/intel/sgxsdk/include -DSQLITE_THREADSAFE=0 -E Enclave/sqlite3.c -o Enclave/sqlite3.i
CC-Preprocess  <=  Enclave/sqlite3.c
cc -m64 -O0 -g  -nostdinc -fvisibility=hidden -fpie -ffunction-sections -fdata-sections -fstack-protector-strong -IEnclave -I/opt/intel/sgxsdk/include -I/opt/intel/sgxsdk/include/tlibc -I/opt/intel/sgxsdk/include/libcxx -DSQLITE_THREADSAFE=0 -c Enclave/sqlite3.i -o Enclave/sqlite3.o
CC  <=  Enclave/sqlite3.i
cc -I/opt/intel/sgxsdk/include -E Enclave/ocall_interface.c -o Enclave/ocall_interface.i
In file included from Enclave/../Enclave/Enclave_t.h:10:0,
                 from Enclave/ocall_interface.c:12:
/opt/intel/sgxsdk/include/sgx_tprotected_fs.h:57:0: warning: "FILENAME_MAX" redefined
 #define FILENAME_MAX  260
 
In file included from /usr/include/stdio.h:131:0,
                 from Enclave/ocall_interface.c:1:
/usr/include/x86_64-linux-gnu/bits/stdio_lim.h:27:0: note: this is the location of the previous definition
 #define FILENAME_MAX 4096
 
In file included from Enclave/../Enclave/Enclave_t.h:10:0,
                 from Enclave/ocall_interface.c:12:
/opt/intel/sgxsdk/include/sgx_tprotected_fs.h:58:0: warning: "FOPEN_MAX" redefined
 #define FOPEN_MAX     20
 
CC-Preprocess  <=  Enclave/ocall_interface.c
cc -m64 -O0 -g  -nostdinc -fvisibility=hidden -fpie -ffunction-sections -fdata-sections -fstack-protector-strong -IEnclave -I/opt/intel/sgxsdk/include -I/opt/intel/sgxsdk/include/tlibc -I/opt/intel/sgxsdk/include/libcxx -c Enclave/ocall_interface.i -o Enclave/ocall_interface.o
In file included from /usr/include/stdio.h:131:0,
                 from Enclave/ocall_interface.c:1:
/usr/include/x86_64-linux-gnu/bits/stdio_lim.h:37:0: note: this is the location of the previous definition
 #define FOPEN_MAX 16
 
CC  <=  Enclave/ocall_interface.i
g++ Enclave/Enclave_t.o Enclave/Enclave.o Enclave/SgxVfsHandler.o Enclave/sqlite3.o Enclave/ocall_interface.o -o enclave.so -m64 -O0 -g  -Wl,--no-undefined -nostdlib -nodefaultlibs -nostartfiles -L/opt/intel/sgxsdk/lib64 -Wl,--whole-archive -lsgx_trts_sim -Wl,--no-whole-archive -Wl,--start-group -lsgx_tstdc -lsgx_tprotected_fs -lsgx_tcxx -lsgx_tservice -lsgx_tcrypto -lsgx_tservice_sim -Wl,--end-group -Wl,-Bstatic -Wl,-Bsymbolic -Wl,--no-undefined -Wl,-pie,-eenclave_entry -Wl,--export-dynamic -Wl,--defsym,__ImageBase=0 -Wl,--gc-sections -Wl,--version-script=Enclave/Enclave.lds
LINK =>  enclave.so
/opt/intel/sgxsdk/bin/x64/sgx_sign sign -key Enclave/Enclave_private.pem -enclave enclave.so -out enclave.signed.so -config Enclave/Enclave.config.xml
tcs_num 10, tcs_max_num 10, tcs_min_pool 1
The required memory is 5058560B.
The required memory is 0x4d3000, 4940 KB.
<EnclaveConfiguration>
Succeed.
    <ProdID>0</ProdID>
    <ISVSVN>0</ISVSVN>
    <StackMaxSize>0x40000</StackMaxSize>
    <HeapMaxSize>0x100000</HeapMaxSize>
    <TCSNum>10</TCSNum>
    <TCSPolicy>1</TCSPolicy>
    <!-- Recommend changing 'DisableDebug' to 1 to make the enclave undebuggable for enclave release -->
    <DisableDebug>0</DisableDebug>
    <MiscSelect>0</MiscSelect>
    <MiscMask>0xFFFFFFFF</MiscMask>
</EnclaveConfiguration>
SIGN =>  enclave.signed.so
The project has been built in debug simulation mode.
make[1]: Verzeichnis „/home/sgx/M-AI-CryptographicProtocols/eclipse-workspace/SGX_SQLite/sgx/enclave_sqlite“ wird verlassen
01:10:08 **** Incremental Build of configuration Intel(R) SGX Simulation Debug for project SGX_SQLite ****
make SGX_DEBUG=1 SGX_MODE=SIM -f sgx/Makefile 
make -C ./sgx/enclave_sqlite  -f sgx_t_u.mk all;
make[1]: Verzeichnis „/home/sgx/M-AI-CryptographicProtocols/eclipse-workspace/SGX_SQLite/sgx/enclave_sqlite“ wird betreten
The project has been built in debug simulation mode.
make[1]: Verzeichnis „/home/sgx/M-AI-CryptographicProtocols/eclipse-workspace/SGX_SQLite/sgx/enclave_sqlite“ wird verlassen
01:10:50 **** Incremental Build of configuration Intel(R) SGX Simulation Debug for project SGX_SQLite ****
make SGX_DEBUG=1 SGX_MODE=SIM -f sgx/Makefile 
make -C ./sgx/enclave_sqlite  -f sgx_t_u.mk all;
make[1]: Verzeichnis „/home/sgx/M-AI-CryptographicProtocols/eclipse-workspace/SGX_SQLite/sgx/enclave_sqlite“ wird betreten
g++ -m64 -O0 -g  -nostdinc -fvisibility=hidden -fpie -ffunction-sections -fdata-sections -fstack-protector-strong -IEnclave -I/opt/intel/sgxsdk/include -I/opt/intel/sgxsdk/include/tlibc -I/opt/intel/sgxsdk/include/libcxx -std=c++11 -nostdinc++ -c Enclave/Enclave.cpp -o Enclave/Enclave.o
CXX  <=  Enclave/Enclave.cpp
g++ Enclave/Enclave_t.o Enclave/Enclave.o Enclave/SgxVfsHandler.o Enclave/sqlite3.o Enclave/ocall_interface.o -o enclave.so -m64 -O0 -g  -Wl,--no-undefined -nostdlib -nodefaultlibs -nostartfiles -L/opt/intel/sgxsdk/lib64 -Wl,--whole-archive -lsgx_trts_sim -Wl,--no-whole-archive -Wl,--start-group -lsgx_tstdc -lsgx_tprotected_fs -lsgx_tcxx -lsgx_tservice -lsgx_tcrypto -lsgx_tservice_sim -Wl,--end-group -Wl,-Bstatic -Wl,-Bsymbolic -Wl,--no-undefined -Wl,-pie,-eenclave_entry -Wl,--export-dynamic -Wl,--defsym,__ImageBase=0 -Wl,--gc-sections -Wl,--version-script=Enclave/Enclave.lds
LINK =>  enclave.so
/opt/intel/sgxsdk/bin/x64/sgx_sign sign -key Enclave/Enclave_private.pem -enclave enclave.so -out enclave.signed.so -config Enclave/Enclave.config.xml
tcs_num 10, tcs_max_num 10, tcs_min_pool 1
The required memory is 5058560B.
The required memory is 0x4d3000, 4940 KB.
Succeed.
<EnclaveConfiguration>
    <ProdID>0</ProdID>
    <ISVSVN>0</ISVSVN>
    <StackMaxSize>0x40000</StackMaxSize>
    <HeapMaxSize>0x100000</HeapMaxSize>
    <TCSNum>10</TCSNum>
    <TCSPolicy>1</TCSPolicy>
    <!-- Recommend changing 'DisableDebug' to 1 to make the enclave undebuggable for enclave release -->
    <DisableDebug>0</DisableDebug>
    <MiscSelect>0</MiscSelect>
    <MiscMask>0xFFFFFFFF</MiscMask>
</EnclaveConfiguration>
SIGN =>  enclave.signed.so
The project has been built in debug simulation mode.
make[1]: Verzeichnis „/home/sgx/M-AI-CryptographicProtocols/eclipse-workspace/SGX_SQLite/sgx/enclave_sqlite“ wird verlassen
01:11:21 **** Incremental Build of configuration Intel(R) SGX Simulation Debug for project SGX_SQLite ****
make SGX_DEBUG=1 SGX_MODE=SIM -f sgx/Makefile 
make -C ./sgx/enclave_sqlite  -f sgx_t_u.mk all;
make[1]: Verzeichnis „/home/sgx/M-AI-CryptographicProtocols/eclipse-workspace/SGX_SQLite/sgx/enclave_sqlite“ wird betreten
g++ -m64 -O0 -g  -nostdinc -fvisibility=hidden -fpie -ffunction-sections -fdata-sections -fstack-protector-strong -IEnclave -I/opt/intel/sgxsdk/include -I/opt/intel/sgxsdk/include/tlibc -I/opt/intel/sgxsdk/include/libcxx -std=c++11 -nostdinc++ -c Enclave/Enclave.cpp -o Enclave/Enclave.o
CXX  <=  Enclave/Enclave.cpp
g++ Enclave/Enclave_t.o Enclave/Enclave.o Enclave/SgxVfsHandler.o Enclave/sqlite3.o Enclave/ocall_interface.o -o enclave.so -m64 -O0 -g  -Wl,--no-undefined -nostdlib -nodefaultlibs -nostartfiles -L/opt/intel/sgxsdk/lib64 -Wl,--whole-archive -lsgx_trts_sim -Wl,--no-whole-archive -Wl,--start-group -lsgx_tstdc -lsgx_tprotected_fs -lsgx_tcxx -lsgx_tservice -lsgx_tcrypto -lsgx_tservice_sim -Wl,--end-group -Wl,-Bstatic -Wl,-Bsymbolic -Wl,--no-undefined -Wl,-pie,-eenclave_entry -Wl,--export-dynamic -Wl,--defsym,__ImageBase=0 -Wl,--gc-sections -Wl,--version-script=Enclave/Enclave.lds
LINK =>  enclave.so
/opt/intel/sgxsdk/bin/x64/sgx_sign sign -key Enclave/Enclave_private.pem -enclave enclave.so -out enclave.signed.so -config Enclave/Enclave.config.xml
tcs_num 10, tcs_max_num 10, tcs_min_pool 1
The required memory is 5058560B.
The required memory is 0x4d3000, 4940 KB.
Succeed.
<EnclaveConfiguration>
    <ProdID>0</ProdID>
    <ISVSVN>0</ISVSVN>
    <StackMaxSize>0x40000</StackMaxSize>
    <HeapMaxSize>0x100000</HeapMaxSize>
    <TCSNum>10</TCSNum>
    <TCSPolicy>1</TCSPolicy>
    <!-- Recommend changing 'DisableDebug' to 1 to make the enclave undebuggable for enclave release -->
    <DisableDebug>0</DisableDebug>
    <MiscSelect>0</MiscSelect>
    <MiscMask>0xFFFFFFFF</MiscMask>
</EnclaveConfiguration>
SIGN =>  enclave.signed.so
The project has been built in debug simulation mode.
make[1]: Verzeichnis „/home/sgx/M-AI-CryptographicProtocols/eclipse-workspace/SGX_SQLite/sgx/enclave_sqlite“ wird verlassen
